/* Private variables ---------------------------------------------------------*/
uint8_t arr[16];
uint16_t tempVar = 0;
float tempVar2 = 0;

  HAL_I2C_Mem_Read(&hi2c1, 0x40<<1, 0x00, I2C_MEMADD_SIZE_8BIT, arr, 2, 100); //чтение конфиг регистра
  HAL_UART_Transmit(&huart3, str, sprintf(str, "[0]=%X [1]=%X\r\n", arr[0], arr[1]), 100); // для проверки связи

//инициализация
arr[0] = 0x10;
arr[1] = 0x00;
HAL_I2C_Mem_Write(&hi2c1, 0x40<<1, 0x05, I2C_MEMADD_SIZE_8BIT, arr, 2, 100);

//стение данных и вывод в уарт
//корректное значение только V_bus, остальное нужно считать
HAL_I2C_Mem_Read(&hi2c1, 0x40<<1, 0x01, I2C_MEMADD_SIZE_8BIT, arr, 2, 100);
tempVar = (uint16_t)(arr[0] << 8) | arr[1];
HAL_UART_Transmit(&huart3, str, sprintf(str, "Shunt V = %d\r\n", tempVar), 100);

HAL_I2C_Mem_Read(&hi2c1, 0x40<<1, 0x02, I2C_MEMADD_SIZE_8BIT, arr, 2, 100);
tempVar2 = (((uint16_t)(arr[0] << 8) | arr[1]) >> 3) * 0.001 * 4; //тут считается напряжение, другие значения хз как ситать
HAL_UART_Transmit(&huart3, str, sprintf(str, "Bus V = %.2f\r\n", tempVar2), 100);

HAL_I2C_Mem_Read(&hi2c1, 0x40<<1, 0x03, I2C_MEMADD_SIZE_8BIT, arr, 2, 100);
tempVar = (uint16_t)(arr[0] << 8) | arr[1];
HAL_UART_Transmit(&huart3, str, sprintf(str, "Power = %d\r\n", tempVar), 100);

HAL_I2C_Mem_Read(&hi2c1, 0x40<<1, 0x04, I2C_MEMADD_SIZE_8BIT, arr, 2, 100);
tempVar = (uint16_t)(arr[0] << 8) | arr[1];
HAL_UART_Transmit(&huart3, str, sprintf(str, "Current = %d\r\n", tempVar), 100);

HAL_I2C_Mem_Read(&hi2c1, 0x40<<1, 0x05, I2C_MEMADD_SIZE_8BIT, arr16, 2, 100);
tempVar = (uint16_t)(arr[0] << 8) | arr[1];
HAL_UART_Transmit(&huart3, str, sprintf(str, "Calibration = %d\r\n\r\n", tempVar), 100);


